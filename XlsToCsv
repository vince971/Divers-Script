using System;
using System.Collections.Generic;
using System.Data;
using System.Data.OleDb;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace Converter
{
    public static class ExcelToCsv
    {
        public static void ConvertExcelToCsv(string excelFilePath, string csvOutputFile, int worksheetNumber = 1)
        {
            var fs = new FileStream(csvOutputFile, FileMode.Create);

            if (!File.Exists(excelFilePath))
                throw new FileNotFoundException(excelFilePath);

            if(File.Exists(csvOutputFile))
                throw new ArgumentException($"File exists: {csvOutputFile}");
            
            // Connection 
            var conStr = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + excelFilePath + ";Extended Properties='Excel 8.0;HDR=Yes;IMEX=1'";
            var con = new OleDbConnection(conStr);
            var dt = new DataTable();

            try
            {
                con.Open();

                var schemaTable = con.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
                if (schemaTable.Rows.Count < worksheetNumber)
                    throw new ArgumentException($"The worksheet number provided cannot be found in the spreadsheet");

                var worksheet = schemaTable.Rows[worksheetNumber - 1][$"table_name"].ToString().Replace("'", "");
                var sql = $"SELECT * FROM [{worksheet}]";
                var da = new OleDbDataAdapter(sql, con);
                da.Fill(dt);
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex);
                throw;
            }
            finally
            {
                con.Close();
            }

            using (var wtr = new StreamWriter(fs, Encoding.Default))
            {
                foreach (DataRow row in dt.Rows)
                {
                    bool firstLine = true;
                    foreach (DataColumn col in dt.Columns)
                    {
                        if(!firstLine)
                            wtr.Write($";");
                        else
                            firstLine = false;

                        var data = row[col.ColumnName].ToString().Replace("\"", "\"\"");
                        wtr.Write(data);
                    }
                    wtr.WriteLine();
                }
            }
        }
    }
}
